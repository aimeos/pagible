import{_ as i,b as o,o as s,a1 as u}from"./index-7-1jCWt1.js";const m={props:{modelValue:{type:String,default:""},config:{type:Object,default:()=>{}},readonly:{type:Boolean,default:!1},context:{type:Object}},emits:["update:modelValue","error"],computed:{rules(){return[e=>!this.config.required||!!e||this.$gettext("Field is required"),e=>{var t,l;return!this.config.min||+((l=(t=e==null?void 0:e.split(`
`)[0])==null?void 0:t.split(";"))==null?void 0:l.length)>=+this.config.min||this.$gettext("Minimum are %{num} columns",{num:this.config.min})},e=>{var t,l;return!this.config.max||+((l=(t=e==null?void 0:e.split(`
`)[0])==null?void 0:t.split(";"))==null?void 0:l.length)<=+this.config.max||this.$gettext("Maximum are %{num} columns",{num:this.config.max})},e=>this.check(e)||this.$gettext("The number of columns is not the same in all rows")]}},methods:{check(e){let t=0,l=0;return e.split(`
`).forEach(a=>{l+=a.split(";").length,t++}),t?Number.isInteger(l/t):!0},update(e){var t,l;this.$emit("update:modelValue",(l=(t=e==null?void 0:e.replace(/(\r)+/g,""))==null?void 0:t.replace(/^\n+/,""))==null?void 0:l.replace(/\n{2,}$/g,`
`))}},watch:{modelValue:{immediate:!0,handler(e){this.$emit("error",!this.rules.every(t=>t(this.modelValue)===!0))}}}};function c(e,t,l,a,d,r){return s(),o(u,{rules:r.rules,"auto-grow":!0,readonly:l.readonly,modelValue:l.modelValue,placeholder:l.config.placeholder||`val;val;val
val;val;val`,"onUpdate:modelValue":t[0]||(t[0]=n=>r.update(n)),variant:"outlined","hide-details":"auto",density:"comfortable",clearable:""},null,8,["rules","readonly","modelValue","placeholder"])}const p=i(m,[["render",c]]);export{p as default};
